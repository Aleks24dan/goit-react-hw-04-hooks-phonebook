{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["LabelInput","styled","form","label","Input","input","Button","button","FormInput","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Span","span","ContainerItems","ul","ContactItems","li","ContactList","contacts","onRemove","map","id","onClick","Filter","onBlur","Container","div","TitleH1","h1","TitleH2","h2","App","useState","setContacts","filter","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","ContactForm","doubleName","find","contact","toLowerCase","doublePhoneNumber","alert","newContact","uuidv4","prevContacts","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.489bda9e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const form = styled.form`\nflex-direction: column;\ndisplay: flex;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const LabelInput = styled.label`\nfont-weight: 700;\nfont-size: 17px;\nmargin:0 auto;\nflex-direction: column;\ndisplay: flex;\nwidth: 300px;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const Input = styled.input`\nmargin-right: ;\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 1px 2px 3px rgb(85, 42, 85);\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\nmargin-top: 10px;\n  \n`\nexport const Label = styled.label`\ndisplay:flex;\nflexdiraction:column;\njustify-content: center;\ntext-align:centr;\n`  ","import { Component } from 'react';\nimport { LabelInput, Input, Button, form } from './ContactForm.styled';\n\nclass FormInput extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <LabelInput> Name<Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          /></LabelInput>\n          \n\n          <LabelInput>Number<Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          /></LabelInput>\n          \n\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormInput;\n","import styled from \"@emotion/styled\";\nexport const Span = styled.span`\nfont-weight: 500;\nfont-size: 17px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\n  \n`\n\nexport const ContainerItems = styled.ul`\nmargin-top: 40px;\npadding-right:40px;\n`\n\nexport const ContactItems = styled.li`\n\nlist-style:none;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\nalign-items: center;\nmargin-bottom:5px;\n\n`\n\n\n","import PropTypes from 'prop-types';\n\nimport {\n  Span,\n  Button,\n  ContactItems,\n  ContainerItems,\n} from './ContactList.styled';\n\nfunction ContactList({ contacts, onRemove }) {\n  return (\n    <ContainerItems>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItems key={id} name={name} number={number}>\n          <Span>{name}: </Span>\n          <Span>{number} </Span>\n          <Button type=\"button\" onClick={() => onRemove(id)}>\n            {' '}\n            Delete contact\n          </Button>\n        </ContactItems>\n      ))}\n    </ContainerItems>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\n\nconst Filter = ({ value, onChange, onBlur }) => (\n  <label>\n    <LabelInput>Find contact by name</LabelInput>\n    <Input type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nmargin: 20px;\n\n    margin: 20px;\n    background: linear-gradient(\n176deg\n, rgb(57 51 175), rgb(87, 66, 100));\n    padding: 10px;\n    width: 577px;\n    box-shadow: 3px 1px 10px rgb(24 24 24);\n    border-radius: 5px;\n    text-align: center;\n\n\n\n`\nexport const TitleH1 = styled.h1`\ncolor:#d0cfc7;\n`\n\nexport const TitleH2 = styled.h2`\nmargin-top:45px;\n\n\n\n`","import React, { useState, useEffect } from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(localStorage.getItem('contacts')) ?? '';\n    currentContacts && setContacts(currentContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function addContact(name, number) {\n    const doubleName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const doublePhoneNumber = contacts.find(\n      contact => contact.number === number,\n    );\n    doubleName && alert(`${name} is already in contacts`);\n    doublePhoneNumber && alert(`This number ${number} is already in contacts`);\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    !doublePhoneNumber &&\n      !doubleName &&\n      setContacts(prevContacts => [newContact, ...prevContacts]);\n  }\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleBlur = e => {\n    setFilter('');\n    e.currentTarget.value = '';\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <TitleH1>Phonebook</TitleH1>\n      <ContactForm onSubmit={addContact} />\n      <TitleH2>Contacts</TitleH2>\n      <Filter value={filter} onChange={changeFilter} onBlur={handleBlur} />\n      <ContactList contacts={getVisibleContacts()} onRemove={deleteContact} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}