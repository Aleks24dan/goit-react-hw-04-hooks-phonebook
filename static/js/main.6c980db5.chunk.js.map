{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["LabelInput","styled","form","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","type","onChange","pattern","title","required","Span","span","ContainerItems","ul","ContactItems","li","ContactList","contacts","onRemove","map","id","onClick","Filter","onBlur","Container","div","TitleH1","h1","TitleH2","h2","App","setContacts","filter","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","doubleName","find","contact","toLowerCase","doublePhoneNumber","alert","newContact","uuidv4","prevContacts","currentTarget","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c980db5.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const form = styled.form`\nflex-direction: column;\ndisplay: flex;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const LabelInput = styled.label`\ndisplay: flex;\nfont-weight: 700;\nfont-size: 17px;\nmargin:0 auto;\nflex-direction: column;\n\nwidth: 300px;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const Input = styled.input`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 1px 2px 3px rgb(85 42 85);\ndisplay: block;\nmargin: 0 auto;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\nmargin-top: 10px;\n  \n`\nexport const Label = styled.label`\ndisplay:flex;\nflexdiraction:column;\njustify-content: center;\ntext-align:centr;\n`  ","import { useState } from 'react';\nimport { LabelInput, Input, Button } from './ContactForm.styled';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetState();\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <LabelInput>Name</LabelInput>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <LabelInput>Number</LabelInput>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\nexport const Span = styled.span`\nfont-weight: 500;\nfont-size: 17px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\n  \n`\n\nexport const ContainerItems = styled.ul`\nmargin-top: 40px;\npadding-right:40px;\n`\n\nexport const ContactItems = styled.li`\n\nlist-style:none;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\nalign-items: center;\nmargin-bottom:5px;\n\n`\n\n\n","import PropTypes from 'prop-types';\n\nimport {\n  Span,\n  Button,\n  ContactItems,\n  ContainerItems,\n} from './ContactList.styled';\n\nfunction ContactList({ contacts, onRemove }) {\n  return (\n    <ContainerItems>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItems key={id} name={name} number={number}>\n          <Span>{name}: </Span>\n          <Span>{number} </Span>\n          <Button type=\"button\" onClick={() => onRemove(id)}>\n            Delete contact\n          </Button>\n        </ContactItems>\n      ))}\n    </ContainerItems>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\n\nconst Filter = ({ value, onChange, onBlur }) => (\n  <label>\n    <LabelInput>Find contact by name\n      <Input type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\n    </LabelInput>\n    \n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nmargin: 20px;\n\n    margin: 20px;\n    background: linear-gradient(\n176deg\n, rgb(57 51 175), rgb(87, 66, 100));\n    padding: 10px;\n    width: 577px;\n    box-shadow: 3px 1px 10px rgb(24 24 24);\n    border-radius: 5px;\n    text-align: center;\n\n\n\n`\nexport const TitleH1 = styled.h1`\ncolor:#d0cfc7;\n`\n\nexport const TitleH2 = styled.h2`\nmargin-top:45px;\n\n\n\n`","import React, { useState, useEffect } from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(localStorage.getItem('contacts')) ?? '';\n    currentContacts && setContacts(currentContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function addContact(name, number) {\n    const doubleName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const doublePhoneNumber = contacts.find(\n      contact => contact.number === number,\n    );\n    doubleName && alert(`${name} is already in contacts`);\n    doublePhoneNumber && alert(`This number ${number} is already in contacts`);\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    !doublePhoneNumber &&\n      !doubleName &&\n      setContacts(prevContacts => [newContact, ...prevContacts]);\n  }\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleBlur = e => {\n    setFilter('');\n    e.currentTarget.value = '';\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <TitleH1>Phonebook</TitleH1>\n      <ContactForm onSubmit={addContact} />\n      <TitleH2>Contacts</TitleH2>\n      <Filter value={filter} onChange={changeFilter} onBlur={handleBlur} />\n      <ContactList contacts={getVisibleContacts()} onRemove={deleteContact} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}