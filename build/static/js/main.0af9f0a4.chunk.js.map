{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["LabelInput","styled","form","label","Input","input","Button","button","FormInput","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Span","span","ContainerItems","ul","ContactItems","li","ContactList","contacts","onRemove","map","id","onClick","Filter","target","onBlur","Container","div","TitleH1","h1","TitleH2","h2","uuidv4","require","v4","App","filter","addContact","doubleName","find","contact","toLowerCase","doublePhoneNumber","alert","newContact","prevState","changeFilter","handleBlur","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevProps","localStorage","setItem","JSON","stringify","parsedContacts","parse","getItem","ContactForm","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af9f0a4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const form = styled.form`\nflex-direction: column;\ndisplay: flex;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const LabelInput = styled.label`\nfont-weight: 700;\nfont-size: 17px;\nmargin:0 auto;\nflex-direction: column;\ndisplay: flex;\nwidth: 300px;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const Input = styled.input`\nmargin-right: ;\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 1px 2px 3px rgb(85, 42, 85);\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\nmargin-top: 10px;\n  \n`\nexport const Label = styled.label`\ndisplay:flex;\nflexdiraction:column;\njustify-content: center;\ntext-align:centr;\n`  ","import { Component } from 'react';\nimport { LabelInput, Input, Button, form } from './ContactForm.styled';\n\nclass FormInput extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <LabelInput> Name<Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          /></LabelInput>\n          \n\n          <LabelInput>Number<Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          /></LabelInput>\n          \n\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormInput;\n","import styled from \"@emotion/styled\";\nexport const Span = styled.span`\nfont-weight: 500;\nfont-size: 17px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\n  \n`\n\nexport const ContainerItems = styled.ul`\nmargin-top: 40px;\npadding-right:40px;\n`\n\nexport const ContactItems = styled.li`\n\nlist-style:none;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\nalign-items: center;\nmargin-bottom:5px;\n\n`\n\n\n","import PropTypes from 'prop-types';\n\nimport {\n  Span,\n  Button,\n  ContactItems,\n  ContainerItems,\n} from './ContactList.styled';\n\nfunction ContactList({ contacts, onRemove }) {\n  return (\n    <ContainerItems>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItems key={id} name={name} number={number}>\n          <Span>{name}: </Span>\n          <Span>{number} </Span>\n          <Button type=\"button\" onClick={() => onRemove(id)}>\n            {' '}\n            Delete contact\n          </Button>\n        </ContactItems>\n      ))}\n    </ContainerItems>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Input, LabelInput, label } from '../ContactForm/ContactForm.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <LabelInput>Find contact by name<Input type=\"text\" value={value} onChange={e=>onChange(e.target.value)} onBlur={()=>onChange('')} /></LabelInput>\n    \n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nmargin: 20px;\n\n    margin: 20px;\n    background: linear-gradient(\n176deg\n, rgb(57 51 175), rgb(87, 66, 100));\n    padding: 10px;\n    width: 577px;\n    box-shadow: 3px 1px 10px rgb(24 24 24);\n    border-radius: 5px;\n    text-align: center;\n\n\n\n`\nexport const TitleH1 = styled.h1`\ncolor:#d0cfc7;\n`\n\nexport const TitleH2 = styled.h2`\nmargin-top:45px;\n\n\n\n`","import React from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\nimport './App.css';\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const doubleName = this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n    const doublePhoneNumber = this.state.contacts.find(contact => contact.number === number)\n    if (doubleName) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else if (doublePhoneNumber) {\n      alert(`This number ${number} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  handleBlur = () => {\n    this.setState({filter:''})\n  }\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n   }\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if(parsedContacts){\n    this.setState({contacts:parsedContacts})}\n\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <TitleH1>Phonebook</TitleH1>\n        <ContactForm onSubmit={this.addContact} />\n        <TitleH2>Contacts</TitleH2>\n        <Filter value={filter} onChange={this.changeFilter} onBlur={ this.handleBlur}/>\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onRemove={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}